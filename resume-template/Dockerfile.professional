FROM nginx:alpine

# Install Python and Flask for template rendering
RUN apk add --update python3 py3-pip
RUN pip3 install flask Werkzeug

WORKDIR /app

# Create directory structure
RUN mkdir -p /app/templates /app/static/css /app/static/js /var/log

# Copy the professional template files
COPY mini_website/templates/professional.html /app/templates/
COPY mini_website/static/css/professional.css /app/static/css/

# Create startup script
RUN echo '#!/bin/sh \n\
python3 /app/app.py &\n\
nginx -g "daemon off;"' > /start.sh && chmod +x /start.sh

# Create Flask app for template rendering
RUN echo "from flask import Flask, render_template, jsonify\n\
import json\n\
import datetime\n\
\n\
app = Flask(__name__)\n\
\n\
@app.route('/')\n\
def index():\n\
    try:\n\
        with open('/usr/share/nginx/html/data.json', 'r') as f:\n\
            resume_data = json.load(f)\n\
        return render_template('professional.html', resume=resume_data, now=datetime.datetime.now())\n\
    except Exception as e:\n\
        return jsonify({'error': str(e)}), 500\n\
\n\
if __name__ == '__main__':\n\
    app.run(host='0.0.0.0', port=5000)" > /app/app.py

# Configure nginx to proxy requests to Flask
RUN echo 'server {\n\
    listen 80;\n\
    server_name localhost;\n\
    \n\
    location / {\n\
        proxy_pass http://localhost:5000;\n\
        proxy_set_header Host $host;\n\
        proxy_set_header X-Real-IP $remote_addr;\n\
    }\n\
    \n\
    location /static/ {\n\
        alias /app/static/;\n\
    }\n\
    \n\
    location /data.json {\n\
        root /usr/share/nginx/html;\n\
    }\n\
}' > /etc/nginx/conf.d/default.conf

# Set up log files
RUN touch /var/log/container-startup.log /var/log/container-debug.log && \
    chmod 666 /var/log/container-startup.log /var/log/container-debug.log

EXPOSE 80

CMD ["/start.sh"]
