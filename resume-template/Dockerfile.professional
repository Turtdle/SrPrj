FROM nginx:alpine

# Install Python and Flask using Alpine package manager
RUN apk add --update python3 py3-pip py3-flask py3-werkzeug bash

WORKDIR /app

# Create directory structure
RUN mkdir -p /app/templates /app/static/css /app/static/js /var/log

# Copy the professional template files
COPY mini_website/templates/professional.html /app/templates/
COPY mini_website/static/css/professional.css /app/static/css/

# Create a proper startup script with debugging
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
echo "Starting container..."\n\
\n\
# Create directories and files if needed\n\
mkdir -p /usr/share/nginx/html\n\
touch /usr/share/nginx/html/data.json\n\
chmod 644 /usr/share/nginx/html/data.json\n\
echo "{\\"name\\":\\"Placeholder\\",\\"contact\\":{\\"email\\":\\"example@example.com\\"}}" > /usr/share/nginx/html/data.json\n\
\n\
echo "Starting Flask app..."\n\
python3 /app/app.py > /var/log/flask.log 2>&1 &\n\
FLASK_PID=$!\n\
sleep 2\n\
\n\
echo "Starting Nginx..."\n\
exec nginx -g "daemon off;"\n\
' > /start.sh && chmod +x /start.sh

# Create a simple Flask app for the template
RUN echo 'from flask import Flask, render_template, jsonify\n\
import json\n\
import datetime\n\
import os\n\
\n\
app = Flask(__name__)\n\
\n\
@app.route("/")\n\
def index():\n\
    try:\n\
        data_file = "/usr/share/nginx/html/data.json"\n\
        if not os.path.exists(data_file):\n\
            return jsonify({"error": "Resume data not found"}), 404\n\
            \n\
        with open(data_file, "r") as f:\n\
            resume_data = json.load(f)\n\
        \n\
        return render_template("professional.html", resume=resume_data, now=datetime.datetime.now())\n\
    except Exception as e:\n\
        return jsonify({"error": str(e)}), 500\n\
\n\
if __name__ == "__main__":\n\
    app.run(host="0.0.0.0", port=5000)\n\
' > /app/app.py

# Configure Nginx to proxy requests to the Flask app
RUN echo 'server {\n\
    listen 80;\n\
    server_name localhost;\n\
    \n\
    location / {\n\
        proxy_pass http://localhost:5000;\n\
        proxy_set_header Host $host;\n\
        proxy_set_header X-Real-IP $remote_addr;\n\
    }\n\
    \n\
    location /static/ {\n\
        alias /app/static/;\n\
    }\n\
    \n\
    location /data.json {\n\
        root /usr/share/nginx/html;\n\
    }\n\
}' > /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["/start.sh"]