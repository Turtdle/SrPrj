FROM nginx:alpine

WORKDIR /app

# Create necessary directories
RUN mkdir -p /usr/share/nginx/html /var/log

# Create startup script with better debugging
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
LOGFILE="/var/log/container-startup.log"\n\
touch $LOGFILE\n\
chmod 666 $LOGFILE\n\
\n\
log() {\n\
  echo "[$(date)] $1" | tee -a $LOGFILE\n\
}\n\
\n\
log "===== CONTAINER STARTUP SCRIPT ====="
log "Starting container..."\n\
\n\
# Look for data.json in various locations\n\
for loc in "/data.json" "/app/data.json" "/usr/share/nginx/html/data.json"; do\n\
    if [ -f "$loc" ]; then\n\
        log "Found data.json at $loc"\n\
        cp -v "$loc" /usr/share/nginx/html/data.json\n\
        break\n\
    fi\n\
done\n\
\n\
# If we still dont have data.json, create a placeholder\n\
if [ ! -f "/usr/share/nginx/html/data.json" ]; then\n\
    log "Creating placeholder data.json"\n\
    echo "{\\"name\\":\\"Placeholder Name\\",\\"contact\\":{\\"email\\":\\"example@example.com\\",\\"phone\\":\\"555-555-5555\\",\\"location\\":\\"Somewhere, USA\\"},\\"education\\":[{\\"institution\\":\\"University\\",\\"degree\\":\\"Degree\\",\\"graduation_date\\":\\"2025\\",\\"gpa\\":\\"4.0\\",\\"relevant_coursework\\":[]}],\\"experience\\":[{\\"position\\":\\"Position\\",\\"company\\":\\"Company\\",\\"location\\":\\"Location\\",\\"duration\\":\\"Duration\\",\\"responsibilities\\":[]}],\\"projects\\":[],\\"skills\\":{\\"languages\\":[],\\"tools\\":[]}}"\n\
         > /usr/share/nginx/html/data.json\n\
fi\n\
\n\
chmod 644 /usr/share/nginx/html/data.json\n\
\n\
log "Data file content (first 100 chars):"\n\
head -c 100 /usr/share/nginx/html/data.json | tee -a $LOGFILE\n\
log ""\n\
\n\
# Copy resume template files\n\
log "Copying template files..."\n\
cp -r /template/* /usr/share/nginx/html/ 2>/dev/null || log "No template files to copy"\n\
\n\
log "Starting Nginx..."\n\
cat > /etc/nginx/conf.d/default.conf << EOF\n\
server {\n\
    listen 80;\n\
    server_name localhost;\n\
    \n\
    location / {\n\
        root /usr/share/nginx/html;\n\
        index index.html;\n\
        try_files \$uri \$uri/ /index.html;\n\
    }\n\
    \n\
    location /data.json {\n\
        root /usr/share/nginx/html;\n\
        add_header Content-Type application/json;\n\
    }\n\
    \n\
    location /logs {\n\
        alias /var/log/;\n\
        autoindex on;\n\
    }\n\
}\n\
EOF\n\
\n\
# Create minimal HTML page if none exists\n\
if [ ! -f "/usr/share/nginx/html/index.html" ]; then\n\
    log "Creating minimal index.html"\n\
    cat > /usr/share/nginx/html/index.html << EOF\n\
<!DOCTYPE html>\n\
<html>\n\
<head>\n\
    <title>Resume Viewer</title>\n\
    <meta charset="UTF-8">\n\
    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n\
    <style>\n\
        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; line-height: 1.6; }\n\
        h1 { color: #333; }\n\
        .container { max-width: 800px; margin: 0 auto; }\n\
        .resume-data { background: #f9f9f9; padding: 20px; border-radius: 5px; white-space: pre-wrap; }\n\
    </style>\n\
</head>\n\
<body>\n\
    <div class="container">\n\
        <h1>Resume Viewer - Standard Template</h1>\n\
        <div id="resume-display">Loading resume data...</div>\n\
    </div>\n\
    \n\
    <script>\n\
        fetch("/data.json")\n\
            .then(response => response.json())\n\
            .then(data => {\n\
                const display = document.getElementById("resume-display");\n\
                let html = "<h2>" + data.name + "</h2>";\n\
                \n\
                // Contact info\n\
                if (data.contact) {\n\
                    html += "<p><strong>Contact:</strong> ";\n\
                    html += data.contact.email ? data.contact.email + " | " : "";\n\
                    html += data.contact.phone ? data.contact.phone + " | " : "";\n\
                    html += data.contact.location ? data.contact.location : "";\n\
                    html += "</p>";\n\
                }\n\
                \n\
                // Education\n\
                if (data.education && data.education.length > 0) {\n\
                    html += "<h3>Education</h3><ul>";\n\
                    data.education.forEach(edu => {\n\
                        html += "<li>" + edu.institution + ": " + edu.degree;\n\
                        if (edu.graduation_date) html += " (" + edu.graduation_date + ")";\n\
                        html += "</li>";\n\
                    });\n\
                    html += "</ul>";\n\
                }\n\
                \n\
                // Experience\n\
                if (data.experience && data.experience.length > 0) {\n\
                    html += "<h3>Experience</h3><ul>";\n\
                    data.experience.forEach(exp => {\n\
                        html += "<li><strong>" + exp.position + " at " + exp.company + "</strong>";\n\
                        if (exp.duration) html += " (" + exp.duration + ")";\n\
                        html += "<br>" + exp.location;\n\
                        if (exp.responsibilities && exp.responsibilities.length > 0) {\n\
                            html += "<ul>";\n\
                            exp.responsibilities.forEach(resp => {\n\
                                html += "<li>" + resp + "</li>";\n\
                            });\n\
                            html += "</ul>";\n\
                        }\n\
                        html += "</li>";\n\
                    });\n\
                    html += "</ul>";\n\
                }\n\
                \n\
                // Skills\n\
                if (data.skills) {\n\
                    html += "<h3>Skills</h3>";\n\
                    if (data.skills.languages && data.skills.languages.length > 0) {\n\
                        html += "<p><strong>Languages:</strong> " + data.skills.languages.join(", ") + "</p>";\n\
                    }\n\
                    if (data.skills.tools && data.skills.tools.length > 0) {\n\
                        html += "<p><strong>Tools:</strong> " + data.skills.tools.join(", ") + "</p>";\n\
                    }\n\
                }\n\
                \n\
                // Projects\n\
                if (data.projects && data.projects.length > 0) {\n\
                    html += "<h3>Projects</h3><ul>";\n\
                    data.projects.forEach(proj => {\n\
                        html += "<li><strong>" + proj.name + "</strong><br>";\n\
                        html += proj.description;\n\
                        if (proj.technologies && proj.technologies.length > 0) {\n\
                            html += "<br><em>Technologies: " + proj.technologies.join(", ") + "</em>";\n\
                        }\n\
                        html += "</li>";\n\
                    });\n\
                    html += "</ul>";\n\
                }\n\
                \n\
                // Full JSON\n\
                html += "<h3>Full JSON Data</h3>";\n\
                html += "<div class=\\"resume-data\\">" + JSON.stringify(data, null, 2) + "</div>";\n\
                \n\
                display.innerHTML = html;\n\
            })\n\
            .catch(error => {\n\
                document.getElementById("resume-display").innerHTML = "<p>Error loading resume data: " + error + "</p>";\n\
            });\n\
    </script>\n\
</body>\n\
</html>\n\
EOF\n\
fi\n\
\n\
# Copy log file to be accessible via web\n\
cp $LOGFILE /usr/share/nginx/html/startup.log 2>/dev/null || true\n\
\n\
log "Starting Nginx server..."\n\
exec nginx -g "daemon off;"\n\
' > /start.sh

RUN chmod +x /start.sh

# Create template directory
RUN mkdir -p /template

# Copy the required React files (this will need to be updated with your actual files)
# COPY resume-template/build/* /template/

EXPOSE 80

CMD ["/start.sh"]